{"ast":null,"code":"import _classCallCheck from \"/Users/tommyn/Documents/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tommyn/Documents/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/* eslint no-restricted-globals: 0*/\nimport auth0 from \"auth0-js\";\nvar LOGIN_SUCCESS_PAGE = \"/secret\";\nvar LOGIN_FAILURE_PAGE = \"/\";\n\nvar Auth =\n/*#__PURE__*/\nfunction () {\n  function Auth() {\n    _classCallCheck(this, Auth);\n\n    this.auth0 = new auth0.WebAuth({\n      domain: 'attomo.eu.auth0.com',\n      clientID: 'MUCukL9CtaLSkE6Rii8I0VcEeuSIA6RO',\n      redirectUri: 'http://localhost:3000/callback',\n      responseType: 'token id_token',\n      scope: 'openid'\n    });\n    this.login = this.login.bind(this);\n  }\n\n  _createClass(Auth, [{\n    key: \"login\",\n    value: function login() {\n      this.auth0.authorize();\n    }\n  }, {\n    key: \"handleAuthentication\",\n    value: function handleAuthentication() {\n      this.auth0.parseHash(function (err, authResults) {\n        if (authResults && authResults.accessToken && authResults.idToken) {\n          // let expiresAt = JSON.stringify((authResults.expiresIn) * 1000 + new Date().getTime());\n          // localStorage.setItem(\"access_token\", authResults.accessToken);\n          // localStorage.setItem(\"id_token\", authResults.idToken);\n          // localStorage.setItem(\"expires_at\",expiresAt);\n          // location.hash = \"\";\n          location.pathname = LOGIN_SUCCESS_PAGE;\n        } else if (err) {\n          location.pathname = LOGIN_SUCCESS_PAGE; // console.log(err);\n        }\n      });\n    }\n  }, {\n    key: \"isAuthenticated\",\n    value: function isAuthenticated() {\n      var expiresAt = this.expiresAt;\n      return new Date().getTime() < expiresAt; // let expiresAt = JSON.stringify(localStorage.getItem(\"expires_at\"))\n      // return new Date().getTime() < expiresAt;\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      localStorage.removeItem(\"access_token\");\n      localStorage.removeItem(\"id_token\");\n      localStorage.removeItem(\"expires_at\");\n      location.pathname = LOGIN_FAILURE_PAGE;\n    }\n  }]);\n\n  return Auth;\n}();\n\nexport { Auth as default };","map":{"version":3,"sources":["/Users/tommyn/Documents/my-app/src/Auth.js"],"names":["auth0","LOGIN_SUCCESS_PAGE","LOGIN_FAILURE_PAGE","Auth","WebAuth","domain","clientID","redirectUri","responseType","scope","login","bind","authorize","parseHash","err","authResults","accessToken","idToken","location","pathname","expiresAt","Date","getTime","localStorage","removeItem"],"mappings":";;;AACA;AACA,OAAOA,KAAP,MAAkB,UAAlB;AAEA,IAAMC,kBAAkB,GAAE,SAA1B;AACA,IAAMC,kBAAkB,GAAE,GAA1B;;IAEqBC,I;;;AAUjB,kBAAa;AAAA;;AAAA,SATbH,KASa,GATL,IAAIA,KAAK,CAACI,OAAV,CAAkB;AACtBC,MAAAA,MAAM,EAAE,qBADc;AAEtBC,MAAAA,QAAQ,EAAE,kCAFY;AAGtBC,MAAAA,WAAW,EAAE,gCAHS;AAItBC,MAAAA,YAAY,EAAE,gBAJQ;AAKtBC,MAAAA,KAAK,EAAE;AALe,KAAlB,CASK;AACT,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAb;AACH;;;;4BAEM;AACH,WAAKX,KAAL,CAAWY,SAAX;AAEH;;;2CAEqB;AAClB,WAAKZ,KAAL,CAAWa,SAAX,CAAqB,UAACC,GAAD,EAAMC,WAAN,EAAqB;AACtC,YAAGA,WAAW,IAAIA,WAAW,CAACC,WAA3B,IAA0CD,WAAW,CAACE,OAAzD,EAAiE;AAG7D;AACA;AACA;AACA;AACA;AACAC,UAAAA,QAAQ,CAACC,QAAT,GAAoBlB,kBAApB;AACH,SATD,MASO,IAAIa,GAAJ,EAAQ;AACXI,UAAAA,QAAQ,CAACC,QAAT,GAAoBlB,kBAApB,CADW,CAEX;AACH;AAIJ,OAjBD;AAoBH;;;sCAEgB;AACb,UAAImB,SAAS,GAAG,KAAKA,SAArB;AACA,aAAO,IAAIC,IAAJ,GAAWC,OAAX,KAAuBF,SAA9B,CAFa,CAGb;AACA;AACH;;;6BAEO;AACJG,MAAAA,YAAY,CAACC,UAAb,CAAwB,cAAxB;AACAD,MAAAA,YAAY,CAACC,UAAb,CAAwB,UAAxB;AACAD,MAAAA,YAAY,CAACC,UAAb,CAAwB,YAAxB;AACAN,MAAAA,QAAQ,CAACC,QAAT,GAAoBjB,kBAApB;AAEH;;;;;;SAvDgBC,I","sourcesContent":["\n/* eslint no-restricted-globals: 0*/\nimport auth0 from \"auth0-js\";\n\nconst LOGIN_SUCCESS_PAGE =\"/secret\";\nconst LOGIN_FAILURE_PAGE =\"/\";\n\nexport default class Auth {\n    auth0 = new auth0.WebAuth({\n        domain: 'attomo.eu.auth0.com',\n        clientID: 'MUCukL9CtaLSkE6Rii8I0VcEeuSIA6RO',\n        redirectUri: 'http://localhost:3000/callback',\n        responseType: 'token id_token',\n        scope: 'openid'\n\n    });\n\n    constructor(){\n        this.login = this.login.bind(this);\n    }\n\n    login(){\n        this.auth0.authorize();\n\n    }\n        \n    handleAuthentication(){\n        this.auth0.parseHash((err, authResults)=> {\n            if(authResults && authResults.accessToken && authResults.idToken){\n\n                \n                // let expiresAt = JSON.stringify((authResults.expiresIn) * 1000 + new Date().getTime());\n                // localStorage.setItem(\"access_token\", authResults.accessToken);\n                // localStorage.setItem(\"id_token\", authResults.idToken);\n                // localStorage.setItem(\"expires_at\",expiresAt);\n                // location.hash = \"\";\n                location.pathname = LOGIN_SUCCESS_PAGE;\n            } else if (err){\n                location.pathname = LOGIN_SUCCESS_PAGE;\n                // console.log(err);\n            }\n\n            \n\n        }\n        );\n\n    }\n\n    isAuthenticated(){\n        let expiresAt = this.expiresAt;\n        return new Date().getTime() < expiresAt;\n        // let expiresAt = JSON.stringify(localStorage.getItem(\"expires_at\"))\n        // return new Date().getTime() < expiresAt;\n    }\n\n    logout(){\n        localStorage.removeItem(\"access_token\");\n        localStorage.removeItem(\"id_token\");\n        localStorage.removeItem(\"expires_at\");\n        location.pathname = LOGIN_FAILURE_PAGE;\n\n    }\n}\n"]},"metadata":{},"sourceType":"module"}